version: "3"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier
  redis:
    image: redis:alpine
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-tier
  result:
    build:
      context: ./result
    image: netszky/result:${IMAGE_TAG}
    restart: always
    depends_on:
      db:
        condition: service_healthy 
    ports:
      - "5001:80"
    networks:
      - front-tier
      - back-tier

  seed-data:
    build:
      context: ./seed-data
    image: netszky/seed-data:${IMAGE_TAG}
    container_name: seed-data
    restart: always

  worker:
    build:
      context: ./worker
    image: netszky/worker:${IMAGE_TAG}
    restart: always
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 
    networks:
      - back-tier

  vote:
    build:
      context: ./vote
    image: netszky/vote:${IMAGE_TAG}
    restart: always
    depends_on:
      redis:
        condition: service_healthy 
    ports:
      - "5005:80"
    networks:
      - front-tier
      - back-tier
volumes:
  db-data:
networks:
  front-tier:
  back-tier: